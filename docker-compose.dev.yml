version: "3"

services:
  app:
    build: .
    environment: &django_env
      DEBUG: 1
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://posthog:posthog@rabbitmq:5672
      DATABASE_URL: postgres://housewatch:housewatch@db:5432/housewatch
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_DATABASE: default
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
      CLICKHOUSE_CLUSTER: parallel_replicas
      CLICKHOUSE_SECURE: false
      CLICKHOUSE_VERIFY: false
      CLICKHOUSE_CA: ""
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
    command:
      - bash
      - -c
      - |
        python manage.py migrate
        python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - clickhouse
      - db
      - redis
      - rabbitmq

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend/public:/frontend/public
      - ./frontend/src:/frontend/src
    ports:
      - "3000:3000"

  db:
    image: postgres:14-alpine
    restart: on-failure
    environment:
      POSTGRES_USER: housewatch
      POSTGRES_DB: housewatch
      POSTGRES_PASSWORD: housewatch

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U housewatch"]
      interval: 5s
      timeout: 5s

  redis:
    image: redis:6.2.7-alpine
    restart: on-failure
    ports:
      - "6388:6379"
    command: redis-server --maxmemory-policy allkeys-lru --maxmemory 200mb

  worker:
    build: .
    environment:
      <<: *django_env
    command:
      - ./bin/celery
    volumes:
      - .:/code
    depends_on:
      - clickhouse
      - db
      - redis
      - rabbitmq

  clickhouse:
    image: ${CLICKHOUSE_SERVER_IMAGE:-clickhouse/clickhouse-server:23.4.2.11}
    restart: on-failure
    depends_on:
      - zookeeper
    ports:
      - "9000:9000"

  zookeeper:
    image: zookeeper:3.7.0
    restart: on-failure

  caddy:
    image: caddy:2.6.1
    ports:
      - "8888:8888"
    environment:
      SITE_ADDRESS: ":8888"
    volumes:
      - ./docker/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - web
      - app

  rabbitmq:
    image: rabbitmq:3.12.2-management-alpine
    ports:
      - "15672:15672" # Web management UI
      - "5672:5672" # Default RabbitMQ broker port
    environment:
      RABBITMQ_DEFAULT_USER: posthog
      RABBITMQ_DEFAULT_PASS: posthog
